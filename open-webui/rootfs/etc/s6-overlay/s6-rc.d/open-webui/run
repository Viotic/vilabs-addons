#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Add-on: Open WebUI
# Runs the Open WebUI server
# ==============================================================================

bashio::log.info "Starting Open WebUI..."

# Set log level
case "$(bashio::config 'log_level')" in
    trace)
        export LOG_LEVEL="TRACE"
        ;;
    debug)
        export LOG_LEVEL="DEBUG"
        ;;
    info)
        export LOG_LEVEL="INFO"
        ;;
    notice)
        export LOG_LEVEL="INFO"
        ;;
    warning)
        export LOG_LEVEL="WARNING"
        ;;
    error)
        export LOG_LEVEL="ERROR"
        ;;
    fatal)
        export LOG_LEVEL="CRITICAL"
        ;;
    *)
        export LOG_LEVEL="INFO"
        ;;
esac

# Set data directory for Open WebUI
cd /data || bashio::exit.nok "Cannot change to data directory"

# Load environment variables
if [[ -f "/data/.env" ]]; then
    # shellcheck disable=SC1091
    source /data/.env
fi

# Set additional environment variables
export WEBUI_AUTH_TRUSTED_EMAIL_HEADER=""
export WEBUI_AUTH_TRUSTED_NAME_HEADER=""
export USE_CUDA_DOCKER=false
export USE_OLLAMA_DOCKER=false

# Start Open WebUI
bashio::log.info "Starting Open WebUI server on port 3000..."

# Set required environment variables for Open WebUI
export DATA_DIR="/data"
export WEBUI_SECRET_KEY="$(bashio::config 'webui_secret_key')"
export ENABLE_SIGNUP="$(bashio::config 'enable_signup')"
export ENABLE_LOGIN_FORM="$(bashio::config 'enable_login_form')"
export OLLAMA_BASE_URL="$(bashio::config 'ollama_base_url')"

# Start Open WebUI using the pip-installed command
# Try different possible command formats for different versions
if command -v open-webui >/dev/null 2>&1; then
    bashio::log.info "Starting Open WebUI with 'open-webui serve' command..."
    exec open-webui serve \
        --host 0.0.0.0 \
        --port 3000
elif python3 -m open_webui --help >/dev/null 2>&1; then
    bashio::log.info "Starting Open WebUI with 'python3 -m open_webui' command..."
    exec python3 -m open_webui \
        --host 0.0.0.0 \
        --port 3000
else
    bashio::log.info "Starting Open WebUI with direct python execution..."
    exec python3 -c "
import sys
try:
    from open_webui.main import app
    import uvicorn
    uvicorn.run(app, host='0.0.0.0', port=3000)
except ImportError as e:
    print(f'Failed to import open_webui: {e}', file=sys.stderr)
    sys.exit(1)
"
fi
