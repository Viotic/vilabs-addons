#!/usr/bin/with-contenv bashio

set -e

bashio::log.info "Starting Open WebUI..."

# Create data directory
mkdir -p /data

# Generate secret key if not provided
if bashio::config.is_empty 'webui_secret_key'; then
    SECRET_KEY=$(python3 -c "import secrets; print(secrets.token_hex(32))")
else
    SECRET_KEY=$(bashio::config 'webui_secret_key')
fi

# Set environment variables
export DATA_DIR="/data"
export WEBUI_SECRET_KEY="${SECRET_KEY}"
export ENABLE_SIGNUP="$(bashio::config 'enable_signup')"
export ENABLE_LOGIN_FORM="$(bashio::config 'enable_login_form')"
export OLLAMA_BASE_URL="$(bashio::config 'ollama_base_url')"
export WEBUI_AUTH_TRUSTED_EMAIL_HEADER=""
export WEBUI_AUTH_TRUSTED_NAME_HEADER=""

# Optional configurations
if ! bashio::config.is_empty 'default_models'; then
    export DEFAULT_MODELS="$(bashio::config 'default_models')"
fi

if bashio::config.true 'enable_web_search'; then
    export ENABLE_WEB_SEARCH=true
    export WEB_SEARCH_ENGINE="$(bashio::config 'web_search_engine')"
fi

if bashio::config.true 'enable_image_generation'; then
    export ENABLE_IMAGE_GENERATION=true
    if ! bashio::config.is_empty 'automatic_1111_base_url'; then
        export AUTOMATIC1111_BASE_URL="$(bashio::config 'automatic_1111_base_url')"
    fi
    if ! bashio::config.is_empty 'comfyui_base_url'; then
        export COMFYUI_BASE_URL="$(bashio::config 'comfyui_base_url')"
    fi
fi

if ! bashio::config.is_empty 'openai_api_base_url'; then
    export OPENAI_API_BASE_URL="$(bashio::config 'openai_api_base_url')"
fi

if ! bashio::config.is_empty 'openai_api_key'; then
    export OPENAI_API_KEY="$(bashio::config 'openai_api_key')"
fi

if bashio::config.true 'enable_model_filter'; then
    export ENABLE_MODEL_FILTER=true
    if ! bashio::config.is_empty 'model_filter_list'; then
        export MODEL_FILTER_LIST="$(bashio::config 'model_filter_list')"
    fi
fi

bashio::log.info "Starting Open WebUI server on port 3000..."

# Start Open WebUI
cd /data
exec open-webui serve --host 0.0.0.0 --port 3000
