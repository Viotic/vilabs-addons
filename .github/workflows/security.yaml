---
name: Security Scan

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: "0 6 * * *"
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

jobs:
  information:
    name: Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: � Find add-ons
        id: changed_addons
        run: |
          # For now, we'll hardcode our known addons
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "addons=[\"open-webui\"]" >> $GITHUB_OUTPUT

  snyk:
    name: 🔍 Snyk Security Scan
    runs-on: ubuntu-latest
    needs:
      - information
    if: needs.information.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.information.outputs.changed_addons) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: 🔍 Snyk Code test
        if: env.SNYK_TOKEN != ''
        run: snyk code test ${{ matrix.addon }}/ || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 🔍 Snyk Open Source monitor
        if: env.SNYK_TOKEN != ''
        run: snyk monitor ${{ matrix.addon }}/ || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 🔍 Build image for vulnerability scanning
        run: |
          cd ${{ matrix.addon }}
          docker build -t ${{ matrix.addon }}:latest .

      - name: 🔍 Snyk Container monitor
        if: env.SNYK_TOKEN != ''
        run: snyk container monitor ${{ matrix.addon }}:latest || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  trivy:
    name: 🔍 Trivy Security Scan
    runs-on: ubuntu-latest
    needs:
      - information
    if: needs.information.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.information.outputs.changed_addons) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔍 Build image for scanning
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.addon }}
          file: ${{ matrix.addon }}/Dockerfile
          push: false
          tags: ${{ matrix.addon }}:latest
          load: true

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.addon }}:latest
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📤 Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  codeql:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: 🏗 Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
