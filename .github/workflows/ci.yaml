---
name: CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  information:
    name: Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🚀 Run add-on list action
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: 🕵️ Find changed add-ons
        id: changed_addons
        run: |
          declare -a changed_addons
          for addon in ${{ steps.addons.outputs.addons }}; do
            if [[ "${{ github.event_name }}" == "push" ]] ||
               git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^${addon}/"; then
              changed_addons+=("\"${addon}\",")
            fi
          done

          changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev)

          if [[ ${#changed_addons[@]} -gt 0 ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          echo "addons=[${changed}]" >> $GITHUB_OUTPUT

  lint-addon:
    name: Lint add-on
    runs-on: ubuntu-latest
    needs:
      - information
    if: needs.information.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.information.outputs.changed_addons) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🚀 Run Home Assistant Add-on Lint
        uses: frenck/action-addon-linter@v2
        with:
          path: "./${{ matrix.addon }}"

  lint-hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    needs:
      - information
    if: needs.information.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.information.outputs.changed_addons) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🚀 Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: "./${{ matrix.addon }}/Dockerfile"

  lint-json:
    name: JSON Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🚀 Run JQ
        run: |
          shopt -s globstar
          cat **/*.json | jq empty

  lint-markdown:
    name: MarkdownLint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🚀 Run mdl
        uses: actionshub/markdownlint@main

  lint-yaml:
    name: YAMLLint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🚀 Run YAMLLint
        run: yamllint .

  build:
    name: Build ${{ matrix.addon }} (${{ matrix.arch }})
    runs-on: ubuntu-latest
    needs:
      - information
      - lint-addon
      - lint-hadolint
      - lint-json
      - lint-markdown
      - lint-yaml
    if: needs.information.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.information.outputs.changed_addons) }}
        arch: ["aarch64", "amd64", "armv7"]

    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Set up buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: ℹ️ Compose build flags
        id: flags
        run: |
          echo "date=$(date +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT
          from=$(yq --no-colors eval ".build_from.${{ matrix.arch }}" "${{ matrix.addon }}/build.yaml")
          echo "from=${from}" >> $GITHUB_OUTPUT

          if [[ "${{ matrix.arch}}" = "amd64" ]]; then
            echo "platform=linux/amd64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.arch }}" = "aarch64" ]]; then
            echo "platform=linux/arm64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.arch }}" = "armv7" ]]; then
            echo "platform=linux/arm/v7" >> $GITHUB_OUTPUT
          fi

      - name: 🚀 Build
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ matrix.addon }}
          file: ${{ matrix.addon }}/Dockerfile
          build-args: |
            BUILD_FROM=${{ steps.flags.outputs.from }}
            BUILD_ARCH=${{ matrix.arch }}
            BUILD_DATE=${{ steps.flags.outputs.date }}
            BUILD_DESCRIPTION=${{ needs.information.outputs.description }}
            BUILD_NAME=${{ needs.information.outputs.name }}
            BUILD_REF=${{ github.sha }}
            BUILD_REPOSITORY=${{ github.repository }}
            BUILD_VERSION=${{ needs.information.outputs.version }}
          platforms: ${{ steps.flags.outputs.platform }}
          push: false
          cache-from: type=gha,scope=${{ matrix.addon }}-${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.addon }}-${{ matrix.arch }}
