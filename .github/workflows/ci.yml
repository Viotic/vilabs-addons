name: CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  information:
    name: Information
    runs-on: ubuntu-latest
    outputs:
      changed-addons: ${{ steps.changed-addons.outputs.addons }}
      changed: ${{ steps.changed-addons.outputs.changed }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run add-on list action
        id: changed-addons
        uses: frenck/action-addon-linter@v2.15.1

  lint:
    name: Lint add-on
    runs-on: ubuntu-latest
    needs: information
    if: needs.information.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.information.outputs.changed-addons) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4
      - name: 🚀 Run Add-on Lint
        uses: frenck/action-addon-linter@v2.15.1
        with:
          path: "./${{ matrix.addon }}"

  build:
    name: Build ${{ matrix.addon }} (${{ matrix.arch }})
    runs-on: ubuntu-latest
    needs: [information, lint]
    if: needs.information.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.information.outputs.changed-addons) }}
        arch: ["aarch64", "amd64", "armv7"]

    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Set up build cache
        id: cache
        uses: actions/cache@v4.1.2
        with:
          path: /tmp/.docker-cache
          key: docker-${{ matrix.addon }}-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            docker-${{ matrix.addon }}-${{ matrix.arch }}

      - name: 🏗 Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: 🏗 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: ℹ️ Compose build flags
        id: flags
        run: |
          echo "date=$(date +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT
          from=$(yq --no-colors eval ".build_from.${{ matrix.arch }}" "${{ matrix.addon }}/build.yaml")
          echo "from=${from}" >> $GITHUB_OUTPUT

          if [[ "${{ matrix.arch }}" = "amd64" ]]; then
            echo "platform=linux/amd64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.arch }}" = "aarch64" ]]; then
            echo "platform=linux/arm64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.arch }}" = "armv7" ]]; then
            echo "platform=linux/arm/v7" >> $GITHUB_OUTPUT
          fi

      - name: 🚀 Build
        uses: docker/build-push-action@v6.9.0
        with:
          push: false
          context: ${{ matrix.addon }}
          file: ${{ matrix.addon }}/Dockerfile
          cache-from: |
            type=local,src=/tmp/.docker-cache
            ghcr.io/frenck/example:cache-${{ matrix.arch }}
          cache-to: type=local,mode=max,dest=/tmp/.docker-cache-new
          platforms: ${{ steps.flags.outputs.platform }}
          build-args: |
            BUILD_ARCH=${{ matrix.arch }}
            BUILD_DATE=${{ steps.flags.outputs.date }}
            BUILD_DESCRIPTION=Open WebUI for Local AI Models
            BUILD_NAME=Open WebUI
            BUILD_REF=${{ github.sha }}
            BUILD_REPOSITORY=${{ github.repository }}
            BUILD_VERSION=dev
            BUILD_FROM=${{ steps.flags.outputs.from }}

      - name: 🚚 Swap build cache
        run: |
          rm -rf /tmp/.docker-cache
          mv /tmp/.docker-cache-new /tmp/.docker-cache
