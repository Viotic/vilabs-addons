---
name: Release

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      addon:
        description: 'Add-on to release'
        required: true
        type: choice
        options:
          - open-webui
      version:
        description: 'Version type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: patch

jobs:
  information:
    name: ‚ÑπÔ∏è Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      publish: ${{ steps.information.outputs.publish }}
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4

      - name: üöÄ Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1
        with:
          path: "./${{ github.event.inputs.addon }}"

      - name: üìù Calculate new version
        id: version
        run: |
          current_version="${{ steps.information.outputs.version }}"
          echo "Current version: $current_version"

          # Parse version
          IFS='.' read -r major minor patch <<< "$current_version"

          case "${{ github.event.inputs.version }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac

          new_version="${major}.${minor}.${patch}"
          echo "New version: $new_version"
          echo "version=$new_version" >> $GITHUB_OUTPUT

  release:
    name: üöÄ Release
    runs-on: ubuntu-latest
    needs: information
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üìù Update version in config.yaml
        run: |
          cd "${{ github.event.inputs.addon }}"
          yq eval '.version = "${{ needs.information.outputs.version }}"' -i config.yaml

      - name: üìù Generate changelog
        id: changelog
        run: |
          # Generate changelog based on commits since last tag
          last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [[ -n "$last_tag" ]]; then
            changelog=$(git log --pretty=format:"- %s" ${last_tag}..HEAD --grep="^feat\|^fix\|^perf\|^refactor" --grep="${{ github.event.inputs.addon }}")
          else
            changelog=$(git log --pretty=format:"- %s" --grep="^feat\|^fix\|^perf\|^refactor" --grep="${{ github.event.inputs.addon }}")
          fi

          if [[ -z "$changelog" ]]; then
            changelog="- General improvements and bug fixes"
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: üè∑Ô∏è Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add "${{ github.event.inputs.addon }}/config.yaml"
          git commit -m "üîñ Release ${{ github.event.inputs.addon }} v${{ needs.information.outputs.version }}"

          git tag -a "v${{ needs.information.outputs.version }}" -m "Release ${{ github.event.inputs.addon }} v${{ needs.information.outputs.version }}"
          git push origin main
          git push origin "v${{ needs.information.outputs.version }}"

      - name: üöÄ Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.information.outputs.version }}"
          release_name: "${{ github.event.inputs.addon }} v${{ needs.information.outputs.version }}"
          body: |
            ## What's changed in ${{ github.event.inputs.addon }} v${{ needs.information.outputs.version }}

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            Add this repository to your Home Assistant add-on store:

            ```
            https://github.com/${{ github.repository }}
            ```

            Then install the **${{ github.event.inputs.addon }}** add-on.

            ## Configuration

            For detailed configuration instructions, see the [add-on documentation](./${{ github.event.inputs.addon }}/DOCS.md).
          draft: false
          prerelease: false

  notify:
    name: üì¢ Notify
    runs-on: ubuntu-latest
    needs:
      - information
      - release
    if: always()
    steps:
      - name: üì¢ Send notification
        run: |
          if [[ "${{ needs.release.result }}" == "success" ]]; then
            echo "‚úÖ Successfully released ${{ github.event.inputs.addon }} v${{ needs.information.outputs.version }}"
          else
            echo "‚ùå Failed to release ${{ github.event.inputs.addon }}"
          fi
