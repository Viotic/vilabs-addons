---
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--config=.markdownlint.yml]

  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.9.0
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore=DL3008, --ignore=DL3009]

  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3
        files: \.py$

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [json, yaml, markdown]
        exclude: ^\.github/

  - repo: local
    hooks:
      - id: addon-config-validation
        name: Add-on configuration validation
        entry: python3
        language: system
        files: config\.yaml$
        args:
          - -c
          - |
            import yaml
            import sys
            import os

            config_file = sys.argv[1]
            try:
                with open(config_file, 'r') as f:
                    config = yaml.safe_load(f)

                required_keys = ['name', 'version', 'slug', 'description', 'arch']
                for key in required_keys:
                    if key not in config:
                        print(f'Missing required key: {key}')
                        sys.exit(1)

                # Validate version format
                version = config.get('version', '')
                if not version or not all(part.isdigit() for part in version.split('.')):
                    print(f'Invalid version format: {version}')
                    sys.exit(1)

                print(f'✅ {config_file} validation passed')
            except Exception as e:
                print(f'❌ {config_file} validation failed: {e}')
                sys.exit(1)
